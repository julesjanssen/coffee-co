@supports not (color: rgb(from white r g b)) {
  a.button,
  button {
    &:where(:not(.primary, .success, .warning, .danger, .ghost)) {
      border: 1px solid rgb(44 44 44 / 20%);
    }
  }
}

main {
  a.button,
  button {
    --color: var(--accent);

    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.35em 1em;
    border: 0;
    border-radius: 0.375rem;
    background: var(--white);
    cursor: pointer;
    font: inherit;
    font-weight: 550;
    gap: 0.5rem;
    line-height: 1.5;
    text-box: cap alphabetic;
    transition: background 0.25s ease;

    &.small {
      font-size: 0.84em;
      line-height: 1.25;
    }

    &.smaller {
      font-size: 0.72em;
      line-height: 1.25;
    }

    &.full,
    &.full-width {
      width: 100%;
    }

    .actions & {
      &:active {
        scale: 0.98;
      }
    }

    /* a regular button */
    &:where(:not(.primary, .success, .warning, .danger, .ghost)) {
      --color: var(--gray-700);

      box-shadow:
        rgb(from var(--color) r g b / 20%) 0 0 0 1px,
        rgb(from var(--color) r g b / 20%) 0 2px 2px -1px,
        rgb(from var(--color) r g b / 10%) 0 4px 4px -2px;
      color: var(--color);

      &::before {
        position: absolute;
        border-radius: inherit;
        background-image: radial-gradient(75% 75% at center bottom, hsl(0deg 0% 20% / 20%), transparent);
        content: '';
        inset: 0;
        opacity: 0;
        transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1);
      }

      &:hover {
        &::before {
          opacity: 0.5;
        }
      }

      &:focus-visible {
        box-shadow:
          oklch(from var(--color) l c h / 20%) 0 0 0 1px,
          oklch(from var(--accent-color) l c h / 30%) 0 0 0 4px,
          oklch(from var(--color) l c h / 20%) 0 2px 2px -1px,
          oklch(from var(--color) l c h / 10%) 0 4px 4px -2px;
        outline: none;
      }
    }

    &:where(.primary, .success, .warning, .danger) {
      --text-shadow-color: oklch(from var(--color) calc(l * 0.84) c h);
      --drop-shadow-color: oklch(from var(--color) calc(l * 0.64) calc(c * 0.75) h);

      background-color: var(--color);
      box-shadow:
        var(--color) 0 0 0 1px,
        rgb(0 0 0 / 0%) 0 0 0 4px,
        rgb(255 255 255 / 8%) 0 1px 0 0 inset,
        rgb(255 255 255 / 4%) 0 -1px 0 0 inset,
        var(--color) 0 0 0 1px,
        oklch(from var(--drop-shadow-color) l c h / 40%) 0 2px 2px -1px,
        oklch(from var(--drop-shadow-color) l c h / 20%) 0 4px 4px -2px;
      color: var(--white);
      text-shadow: 0 1px 1px var(--text-shadow-color);

      & .v-icon {
        filter: drop-shadow(0 1px 1px var(--text-shadow-color));
      }

      &::before {
        position: absolute;
        border-radius: inherit;
        background-image: radial-gradient(75% 75% at center top, hsl(0deg 0% 100% / 25%), transparent);
        content: '';
        inset: 0;
        transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1);
      }

      &:hover {
        &::before {
          opacity: 0.25;
        }
      }

      &:focus-visible {
        box-shadow:
          var(--color) 0 0 0 1px,
          oklch(from var(--color) l c h / 30%) 0 0 0 4px,
          rgb(0 0 0 / 0%) 0 0 0 4px,
          rgb(255 255 255 / 8%) 0 1px 0 0 inset,
          rgb(255 255 255 / 4%) 0 -1px 0 0 inset,
          var(--color) 0 0 0 1px,
          oklch(from var(--drop-shadow-color) l c h / 24%) 0 2px 2px -1px,
          oklch(from var(--drop-shadow-color) l c h / 12%) 0 4px 4px -2px;
        outline: none;
      }
    }

    &.ghost {
      background: none;
      color: var(--accent-color);
      transition: all 0.25s ease;

      &:hover,
      &:focus {
        background: oklch(from var(--accent-color) l c h / 20%);
        box-shadow: oklch(from var(--accent-color) l c h / 20%) 0 0 0 1px;
      }

      &:focus-visible {
        outline: none;
      }
    }

    &[disabled] {
      cursor: revert;
      filter: grayscale(1);
      opacity: 0.5;
      pointer-events: none;

      &::after {
        display: none;
      }
    }

    &.success {
      --color: var(--green-500);
    }

    &.primary {
      --color: var(--accent-color);
    }

    &.error,
    &.danger {
      --color: var(--red-500);
    }

    &.warning {
      --color: var(--yellow-500);
    }

    & > span {
      display: flex;
      align-items: center;
      font-weight: 450;
      gap: 0.75rem;

      & .v-icon {
        width: 1rem;
        height: 1rem;
        stroke-width: 1.25;
      }
    }
  }
}
