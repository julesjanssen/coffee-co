name: Blauwdruk

on: [ push, workflow_dispatch ]

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      APP_ENV: testing
      MYSQL_ALLOW_EMPTY_PASSWORD: false
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: mysql_user
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: blauwdruk_test
      # DB_CONNECTION: mysql
      DB_DATABASE: blauwdruk_test
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_HOST: localhost
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file

    strategy:
      fail-fast: true
      matrix:
        php-versions: [ 8.4 ]

    name: PHP ${{ matrix.php-versions }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          ini-values: error_reporting=E_ALL
          tools: composer
          coverage: none

      - name: Create DB
        run: |
          sudo /etc/init.d/mysql start
          mysql -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e 'CREATE DATABASE IF NOT EXISTS ${{ env.MYSQL_DATABASE }};'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear config
        run: php artisan config:clear

      - name: Run Migration
        run: php artisan app:migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Execute tests
        run: |
          ./vendor/bin/pest

      - name: Execute static analysis
        run: |
          ./vendor/bin/phpstan --error-format=github --no-progress

      - name: Lint PHP
        run: |
          ./vendor/bin/pint --quiet --test
